name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    timeout-minutes: 14

    permissions:
      contents: write
      packages: read

    env:
      MIX_ENV: "prod"

    steps:
      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y p7zip-full p7zip-rar xz-utils wget

      - name: Install Zig
        uses: mlugg/setup-zig@v1
        with:
          version: 0.14.0

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict

      - name: Cache deps
        id: cache-deps
        uses: actions/cache@v4
        env:
          cache-name: cache-elixir-deps
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-

      - name: Cache compiled build
        id: cache-build
        uses: actions/cache@v4
        env:
          cache-name: cache-compiled-build
        with:
          path: _build
          key: release-${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-
            ${{ runner.os }}-mix-

      - name: Clean to rule out incremental build as a source of flakiness
        if: github.run_attempt != '1'
        run: |
          mix deps.clean --all
          mix clean
          rm -rf _build
        shell: sh

      - name: Install dependencies
        run: mix deps.get

      - name: Compiles without warnings
        run: mix compile --warnings-as-errors

      - name: Check Formatting
        run: mix format --check-formatted

      - name: Check for unused dependencies
        run: mix deps.unlock --unused

      - name: Build binaries
        run: mix release

      - name: Rename and move files, and then create tarballs
        run: |
          mkdir -p release_files/macos-aarch64
          mkdir -p release_files/macos-x86_64
          mkdir -p release_files/linux-aarch64
          mkdir -p release_files/linux-x86_64
          mkdir -p release_files/windows-x86_64
          cp burrito_out/nh_macos-aarch64 release_files/macos-aarch64/nh
          cp burrito_out/nh_macos-x86_64 release_files/macos-x86_64/nh
          cp burrito_out/nh_linux-aarch64 release_files/linux-aarch64/nh
          cp burrito_out/nh_linux-x86_64 release_files/linux-x86_64/nh
          cp burrito_out/nh_windows-x86_64.exe release_files/windows-x86_64/nh.exe
          cd release_files/macos-aarch64 && tar -cJf macos-aarch64.tar.xz nh && cd ../..
          cd release_files/macos-x86_64 && tar -cJf macos-x86_64.tar.xz nh && cd ../..
          cd release_files/linux-aarch64 && tar -cJf linux-aarch64.tar.xz nh && cd ../..
          cd release_files/linux-x86_64 && tar -cJf linux-x86_64.tar.xz nh && cd ../..
          cd release_files/windows-x86_64 && tar -cJf windows-x86_64.tar.xz nh.exe && cd ../..

      - name: Extract tag version
        id: extract-version
        # Strip a string prefix from the git tag name:
        run: |
          echo "tag-name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Release notes
        run: |
          {
            echo 'notes<<EOF'
            awk '/## ${{ steps.extract-version.outputs.tag-name }}/{flag=1; next} /##/{flag=0} flag' CHANGELOG.md
            echo EOF
          } >> $GITHUB_OUTPUT
        id: extract-release-notes

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          prerelease: ${{ contains(github.ref, '-rc') }}
          body: ${{ steps.extract-release-notes.outputs.notes }}
          files: |
            release_files/macos-aarch64/macos-aarch64.tar.xz
            release_files/macos-x86_64/macos-x86_64.tar.xz
            release_files/linux-aarch64/linux-aarch64.tar.xz
            release_files/linux-x86_64/linux-x86_64.tar.xz
            release_files/windows-x86_64/windows-x86_64.tar.xz

      - name: Clean release
        run: rm -rf _build/prod/rel
